syntax = "proto3";

package doxchain.abs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "doxchain/abs/params.proto";
import "doxchain/abs/watchlist.proto";
import "doxchain/abs/partitioned_pool_registry.proto";

option go_package = "github.com/be-heroes/doxchain/x/abs/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/doxchain/abs/params";
  
  }
  
  // Queries a list of QueryBreakFactor items.
  rpc QueryBreakFactor (QueryBreakFactorRequest) returns (QueryBreakFactorResponse) {
    option (google.api.http).get = "/doxchain/abs/query_break_factor";
  
  }
  
  // Queries watchlist.
  rpc QueryWatchlist (QueryWatchlistRequest) returns (QueryWatchlistResponse) {
    option (google.api.http).get = "/doxchain/abs/query_watchlist";
  
  }
  
  // Queries a list of PartitionedPools items.
  rpc PartitionedPoolRegistry    (QueryGetPartitionedPoolRegistryRequest) returns (QueryGetPartitionedPoolRegistryResponse) {
    option (google.api.http).get = "/be-heroes/doxchain/abs/partitioned_pool_registries/{creator}";
  
  }
  rpc PartitionedPoolRegistryAll (QueryAllPartitionedPoolRegistriesRequest) returns (QueryAllPartitionedPoolRegistriesResponse) {
    option (google.api.http).get = "/be-heroes/doxchain/abs/partitioned_pool_registries";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryBreakFactorRequest {}

message QueryBreakFactorResponse {
  string value = 1;
}

message QueryWatchlistRequest {}

message QueryWatchlistResponse {
  Watchlist watchlist = 1 [(gogoproto.nullable) = false];
}

message QueryGetPartitionedPoolRegistryRequest {
  string creator = 1;
}

message QueryGetPartitionedPoolRegistryResponse {
  PartitionedPoolRegistry partitionedPoolRegistry = 1 [(gogoproto.nullable) = false];
}

message QueryAllPartitionedPoolRegistriesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPartitionedPoolRegistriesResponse {
  repeated PartitionedPoolRegistry                       partitionedPoolRegistries = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination       = 2;
}

