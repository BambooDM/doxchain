syntax = "proto3";

package doxchain.did;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "doxchain/did/params.proto";
import "doxchain/did/did.proto";

option go_package = "doxchain/x/did/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/doxchain/did/params";
  
  }
  
  // Queries a list of Did items.
  rpc Did    (QueryGetDidRequest) returns (QueryGetDidResponse) {
    option (google.api.http).get = "/doxchain/did/did/{fullyQualifiedDidIdentifier}";
  
  }
  rpc DidAll (QueryAllDidRequest) returns (QueryAllDidResponse) {
    option (google.api.http).get = "/doxchain/did/did";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDidRequest {
  string fullyQualifiedDidIdentifier = 1;
}

message QueryGetDidResponse {
  Did Did = 1 [(gogoproto.nullable) = false];
}

message QueryAllDidRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDidResponse {
  repeated Did                                    Did        = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

