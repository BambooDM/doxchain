// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: doxchain/oauthtwo/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgTokenRequest struct {
	Creator                              string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TenantW3CIdentifier                  string    `protobuf:"bytes,2,opt,name=tenantW3CIdentifier,json=tenant,proto3" json:"tenantW3CIdentifier,omitempty"`
	Scope                                []string  `protobuf:"bytes,3,rep,name=scope,proto3" json:"scope,omitempty"`
	GrantType                            GrantType `protobuf:"varint,4,opt,name=grantType,proto3,enum=beheroes.doxchain.oauthtwo.v1beta1.GrantType" json:"grantType,omitempty"`
	ClientRegistrationAppIdW3CIdentifier string    `protobuf:"bytes,5,opt,name=clientRegistrationAppIdW3CIdentifier,json=clientId,proto3" json:"clientRegistrationAppIdW3CIdentifier,omitempty"`
	ClientSecret                         string    `protobuf:"bytes,6,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	DeviceCode                           string    `protobuf:"bytes,7,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`
	AuthorizationCode                    string    `protobuf:"bytes,8,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"`
	ClientAssertionType                  string    `protobuf:"bytes,9,opt,name=clientAssertionType,proto3" json:"clientAssertionType,omitempty"`
	ClientAssertion                      string    `protobuf:"bytes,10,opt,name=clientAssertion,proto3" json:"clientAssertion,omitempty"`
	ResponseType                         string    `protobuf:"bytes,11,opt,name=responseType,proto3" json:"responseType,omitempty"`
	RedirectUri                          string    `protobuf:"bytes,12,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
	CodeChallenge                        string    `protobuf:"bytes,13,opt,name=codeChallenge,proto3" json:"codeChallenge,omitempty"`
	CodeChallengeMethod                  string    `protobuf:"bytes,14,opt,name=codeChallengeMethod,proto3" json:"codeChallengeMethod,omitempty"`
	State                                string    `protobuf:"bytes,15,opt,name=state,proto3" json:"state,omitempty"`
	RequestedTokenUse                    string    `protobuf:"bytes,16,opt,name=requestedTokenUse,proto3" json:"requestedTokenUse,omitempty"`
}

func (m *MsgTokenRequest) Reset()         { *m = MsgTokenRequest{} }
func (m *MsgTokenRequest) String() string { return proto.CompactTextString(m) }
func (*MsgTokenRequest) ProtoMessage()    {}
func (*MsgTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{0}
}
func (m *MsgTokenRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTokenRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTokenRequest.Merge(m, src)
}
func (m *MsgTokenRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTokenRequest proto.InternalMessageInfo

func (m *MsgTokenRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTokenRequest) GetTenantW3CIdentifier() string {
	if m != nil {
		return m.TenantW3CIdentifier
	}
	return ""
}

func (m *MsgTokenRequest) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *MsgTokenRequest) GetGrantType() GrantType {
	if m != nil {
		return m.GrantType
	}
	return GrantType_GRANT_TYPE_UNSPECIFIED
}

func (m *MsgTokenRequest) GetClientRegistrationAppIdW3CIdentifier() string {
	if m != nil {
		return m.ClientRegistrationAppIdW3CIdentifier
	}
	return ""
}

func (m *MsgTokenRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *MsgTokenRequest) GetDeviceCode() string {
	if m != nil {
		return m.DeviceCode
	}
	return ""
}

func (m *MsgTokenRequest) GetAuthorizationCode() string {
	if m != nil {
		return m.AuthorizationCode
	}
	return ""
}

func (m *MsgTokenRequest) GetClientAssertionType() string {
	if m != nil {
		return m.ClientAssertionType
	}
	return ""
}

func (m *MsgTokenRequest) GetClientAssertion() string {
	if m != nil {
		return m.ClientAssertion
	}
	return ""
}

func (m *MsgTokenRequest) GetResponseType() string {
	if m != nil {
		return m.ResponseType
	}
	return ""
}

func (m *MsgTokenRequest) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *MsgTokenRequest) GetCodeChallenge() string {
	if m != nil {
		return m.CodeChallenge
	}
	return ""
}

func (m *MsgTokenRequest) GetCodeChallengeMethod() string {
	if m != nil {
		return m.CodeChallengeMethod
	}
	return ""
}

func (m *MsgTokenRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgTokenRequest) GetRequestedTokenUse() string {
	if m != nil {
		return m.RequestedTokenUse
	}
	return ""
}

type MsgTokenResponse struct {
	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TokenType   string `protobuf:"bytes,2,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,3,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
}

func (m *MsgTokenResponse) Reset()         { *m = MsgTokenResponse{} }
func (m *MsgTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTokenResponse) ProtoMessage()    {}
func (*MsgTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{1}
}
func (m *MsgTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTokenResponse.Merge(m, src)
}
func (m *MsgTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTokenResponse proto.InternalMessageInfo

func (m *MsgTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *MsgTokenResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *MsgTokenResponse) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

type MsgDeviceCodeRequest struct {
	Creator                              string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TenantW3CIdentifier                  string   `protobuf:"bytes,2,opt,name=tenantW3CIdentifier,proto3" json:"tenantW3CIdentifier,omitempty"`
	ClientRegistrationAppIdW3CIdentifier string   `protobuf:"bytes,3,opt,name=clientRegistrationAppIdW3CIdentifier,json=clientId,proto3" json:"clientRegistrationAppIdW3CIdentifier,omitempty"`
	Scope                                []string `protobuf:"bytes,4,rep,name=scope,proto3" json:"scope,omitempty"`
}

func (m *MsgDeviceCodeRequest) Reset()         { *m = MsgDeviceCodeRequest{} }
func (m *MsgDeviceCodeRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeviceCodeRequest) ProtoMessage()    {}
func (*MsgDeviceCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{2}
}
func (m *MsgDeviceCodeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeviceCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeviceCodeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeviceCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeviceCodeRequest.Merge(m, src)
}
func (m *MsgDeviceCodeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeviceCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeviceCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeviceCodeRequest proto.InternalMessageInfo

func (m *MsgDeviceCodeRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeviceCodeRequest) GetTenantW3CIdentifier() string {
	if m != nil {
		return m.TenantW3CIdentifier
	}
	return ""
}

func (m *MsgDeviceCodeRequest) GetClientRegistrationAppIdW3CIdentifier() string {
	if m != nil {
		return m.ClientRegistrationAppIdW3CIdentifier
	}
	return ""
}

func (m *MsgDeviceCodeRequest) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

type MsgDeviceCodeResponse struct {
	DeviceCode      string `protobuf:"bytes,1,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`
	UserCode        string `protobuf:"bytes,2,opt,name=userCode,proto3" json:"userCode,omitempty"`
	VerificationUri string `protobuf:"bytes,3,opt,name=verification_uri,json=verificationUri,proto3" json:"verification_uri,omitempty"`
}

func (m *MsgDeviceCodeResponse) Reset()         { *m = MsgDeviceCodeResponse{} }
func (m *MsgDeviceCodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeviceCodeResponse) ProtoMessage()    {}
func (*MsgDeviceCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{3}
}
func (m *MsgDeviceCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeviceCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeviceCodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeviceCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeviceCodeResponse.Merge(m, src)
}
func (m *MsgDeviceCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeviceCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeviceCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeviceCodeResponse proto.InternalMessageInfo

func (m *MsgDeviceCodeResponse) GetDeviceCode() string {
	if m != nil {
		return m.DeviceCode
	}
	return ""
}

func (m *MsgDeviceCodeResponse) GetUserCode() string {
	if m != nil {
		return m.UserCode
	}
	return ""
}

func (m *MsgDeviceCodeResponse) GetVerificationUri() string {
	if m != nil {
		return m.VerificationUri
	}
	return ""
}

type MsgAuthorizeRequest struct {
	Creator                              string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TenantW3CIdentifier                  string   `protobuf:"bytes,2,opt,name=tenantW3CIdentifier,proto3" json:"tenantW3CIdentifier,omitempty"`
	ClientRegistrationAppIdW3CIdentifier string   `protobuf:"bytes,3,opt,name=clientRegistrationAppIdW3CIdentifier,json=clientId,proto3" json:"clientRegistrationAppIdW3CIdentifier,omitempty"`
	Scope                                []string `protobuf:"bytes,4,rep,name=scope,proto3" json:"scope,omitempty"`
	UserCode                             string   `protobuf:"bytes,5,opt,name=userCode,proto3" json:"userCode,omitempty"`
}

func (m *MsgAuthorizeRequest) Reset()         { *m = MsgAuthorizeRequest{} }
func (m *MsgAuthorizeRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAuthorizeRequest) ProtoMessage()    {}
func (*MsgAuthorizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{4}
}
func (m *MsgAuthorizeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthorizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthorizeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthorizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthorizeRequest.Merge(m, src)
}
func (m *MsgAuthorizeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthorizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthorizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthorizeRequest proto.InternalMessageInfo

func (m *MsgAuthorizeRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAuthorizeRequest) GetTenantW3CIdentifier() string {
	if m != nil {
		return m.TenantW3CIdentifier
	}
	return ""
}

func (m *MsgAuthorizeRequest) GetClientRegistrationAppIdW3CIdentifier() string {
	if m != nil {
		return m.ClientRegistrationAppIdW3CIdentifier
	}
	return ""
}

func (m *MsgAuthorizeRequest) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *MsgAuthorizeRequest) GetUserCode() string {
	if m != nil {
		return m.UserCode
	}
	return ""
}

type MsgAuthorizeResponse struct {
	AuthorizationCode string `protobuf:"bytes,1,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"`
}

func (m *MsgAuthorizeResponse) Reset()         { *m = MsgAuthorizeResponse{} }
func (m *MsgAuthorizeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAuthorizeResponse) ProtoMessage()    {}
func (*MsgAuthorizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fea711862b6e3de, []int{5}
}
func (m *MsgAuthorizeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthorizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthorizeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthorizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthorizeResponse.Merge(m, src)
}
func (m *MsgAuthorizeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthorizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthorizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthorizeResponse proto.InternalMessageInfo

func (m *MsgAuthorizeResponse) GetAuthorizationCode() string {
	if m != nil {
		return m.AuthorizationCode
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgTokenRequest)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgTokenRequest")
	proto.RegisterType((*MsgTokenResponse)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgTokenResponse")
	proto.RegisterType((*MsgDeviceCodeRequest)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgDeviceCodeRequest")
	proto.RegisterType((*MsgDeviceCodeResponse)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgDeviceCodeResponse")
	proto.RegisterType((*MsgAuthorizeRequest)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgAuthorizeRequest")
	proto.RegisterType((*MsgAuthorizeResponse)(nil), "beheroes.doxchain.oauthtwo.v1beta1.MsgAuthorizeResponse")
}

func init() {
	proto.RegisterFile("doxchain/oauthtwo/v1beta1/tx.proto", fileDescriptor_2fea711862b6e3de)
}

var fileDescriptor_2fea711862b6e3de = []byte{
	// 740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0x9b, 0xa6, 0x6d, 0x6e, 0x7f, 0xd2, 0x6f, 0xda, 0x4f, 0xb2, 0xa2, 0x2a, 0x8a, 0x4c,
	0x91, 0x82, 0x44, 0xed, 0xfe, 0x20, 0x28, 0x62, 0x55, 0x5a, 0x09, 0x22, 0x94, 0x4d, 0x68, 0x85,
	0xc4, 0xa6, 0x72, 0xec, 0x5b, 0x67, 0x44, 0xf0, 0x98, 0x99, 0x49, 0x49, 0x59, 0x54, 0xe2, 0x0d,
	0xd8, 0xf3, 0x12, 0x3c, 0x06, 0x12, 0x9b, 0x2e, 0x59, 0xa2, 0xf6, 0x39, 0x90, 0x90, 0x67, 0x9c,
	0xc4, 0x4e, 0xfa, 0x93, 0xb2, 0x62, 0xe7, 0x39, 0xf7, 0xdc, 0x99, 0x7b, 0x8f, 0xcf, 0x9d, 0x01,
	0xcb, 0x67, 0x5d, 0xaf, 0xe5, 0xd2, 0xd0, 0x61, 0x6e, 0x47, 0xb6, 0xe4, 0x47, 0xe6, 0x9c, 0x6c,
	0x36, 0x51, 0xba, 0x9b, 0x8e, 0xec, 0xda, 0x11, 0x67, 0x92, 0x11, 0xab, 0x89, 0x2d, 0xe4, 0x0c,
	0x85, 0xdd, 0x23, 0xdb, 0x3d, 0xb2, 0x9d, 0x90, 0x4b, 0x2b, 0x01, 0x0b, 0x98, 0xa2, 0x3b, 0xf1,
	0x97, 0xce, 0x2c, 0xad, 0x06, 0x8c, 0x05, 0x6d, 0x74, 0xdc, 0x88, 0x3a, 0x6e, 0x18, 0x32, 0xe9,
	0x4a, 0xca, 0x42, 0x91, 0x44, 0x9f, 0x5d, 0x7f, 0x76, 0xbc, 0x66, 0x9c, 0x7e, 0x52, 0xfc, 0x23,
	0x8f, 0xf9, 0x78, 0xc4, 0x31, 0xa0, 0x42, 0xf2, 0xd3, 0x24, 0xf9, 0xfe, 0x0d, 0x85, 0x9f, 0x46,
	0x98, 0x9c, 0x61, 0x7d, 0xcd, 0x43, 0xb1, 0x2e, 0x82, 0x03, 0xf6, 0x0e, 0xc3, 0x06, 0x7e, 0xe8,
	0xa0, 0x90, 0xc4, 0x84, 0x19, 0x8f, 0xa3, 0x2b, 0x19, 0x37, 0x8d, 0x8a, 0x51, 0x2d, 0x34, 0x7a,
	0x4b, 0x72, 0x0f, 0x96, 0x25, 0x86, 0x6e, 0x28, 0xdf, 0x6c, 0xef, 0xd5, 0x7c, 0x0c, 0x25, 0x3d,
	0xa6, 0xc8, 0xcd, 0x49, 0xc5, 0x9a, 0xd6, 0x21, 0xb2, 0x02, 0x79, 0xe1, 0xb1, 0x08, 0xcd, 0x5c,
	0x25, 0x57, 0x2d, 0x34, 0xf4, 0x82, 0xbc, 0x82, 0x42, 0xc0, 0xdd, 0x50, 0x1e, 0x9c, 0x46, 0x68,
	0x4e, 0x55, 0x8c, 0xea, 0xe2, 0xd6, 0xba, 0x7d, 0xbb, 0x70, 0xf6, 0x8b, 0x5e, 0x52, 0x63, 0x90,
	0x4f, 0x1e, 0xc3, 0x9a, 0xd7, 0xa6, 0x18, 0xca, 0x86, 0x6e, 0x5a, 0xc9, 0xb0, 0x1b, 0x45, 0x35,
	0x3f, 0x5b, 0x58, 0x5e, 0x15, 0x36, 0xab, 0xb9, 0x35, 0x9f, 0x58, 0x30, 0xaf, 0xbf, 0x5f, 0xa3,
	0xc7, 0x51, 0x9a, 0xd3, 0x2a, 0x9e, 0xc1, 0x48, 0x19, 0xc0, 0xc7, 0x13, 0xea, 0xe1, 0x1e, 0xf3,
	0xd1, 0x9c, 0x51, 0x8c, 0x14, 0x42, 0x1e, 0xc2, 0x7f, 0x19, 0xf5, 0x15, 0x6d, 0x56, 0xd1, 0x46,
	0x03, 0x64, 0x03, 0x96, 0xf5, 0xee, 0xbb, 0x42, 0x20, 0x8f, 0x61, 0x25, 0x40, 0x41, 0xf1, 0xaf,
	0x0a, 0x91, 0x2a, 0x14, 0x87, 0x60, 0x13, 0x14, 0x7b, 0x18, 0x8e, 0xbb, 0xe1, 0x28, 0x22, 0x16,
	0x0a, 0x54, 0x9b, 0xce, 0xe9, 0x6e, 0xd2, 0x18, 0xa9, 0xc0, 0x1c, 0x47, 0x9f, 0x72, 0xf4, 0xe4,
	0x21, 0xa7, 0xe6, 0xbc, 0xa2, 0xa4, 0x21, 0xb2, 0x06, 0x0b, 0xb1, 0x7f, 0xf6, 0x5a, 0x6e, 0xbb,
	0x8d, 0x61, 0x80, 0xe6, 0x82, 0xe2, 0x64, 0x41, 0xd5, 0x47, 0x1a, 0xa8, 0xa3, 0x6c, 0x31, 0xdf,
	0x5c, 0x4c, 0xfa, 0x18, 0x0d, 0x29, 0x1b, 0x48, 0x57, 0xa2, 0x59, 0x54, 0x1c, 0xbd, 0x88, 0xd5,
	0xe3, 0xda, 0x66, 0xe8, 0x2b, 0xd3, 0x1d, 0x0a, 0x34, 0x97, 0xb4, 0x7a, 0x23, 0x01, 0x2b, 0x82,
	0xa5, 0x81, 0x39, 0x75, 0x57, 0x71, 0x47, 0xae, 0xe7, 0xa1, 0x10, 0x0a, 0x4e, 0x1c, 0x9a, 0x86,
	0xc8, 0x2a, 0x14, 0x64, 0xfc, 0xa1, 0x44, 0xd1, 0xde, 0x1c, 0x00, 0x71, 0x14, 0xbb, 0x11, 0xe5,
	0x28, 0x6a, 0xa1, 0x99, 0xab, 0x18, 0xd5, 0x5c, 0x63, 0x00, 0x58, 0xdf, 0x0c, 0x58, 0xa9, 0x8b,
	0x60, 0xbf, 0xff, 0xbf, 0x6f, 0x1f, 0x8a, 0x8d, 0x9b, 0x86, 0xe2, 0xaa, 0xd0, 0xd8, 0xf6, 0xcd,
	0x0d, 0xd9, 0xb7, 0x3f, 0x59, 0x53, 0xa9, 0xc9, 0xb2, 0xce, 0xe0, 0xff, 0xa1, 0x8a, 0x13, 0xa5,
	0xb2, 0x4e, 0x36, 0x46, 0x9c, 0x5c, 0x82, 0xd9, 0x8e, 0x40, 0xae, 0xa2, 0xba, 0xda, 0xfe, 0x9a,
	0x3c, 0x80, 0xa5, 0x13, 0xe4, 0xf4, 0x98, 0x7a, 0xfa, 0x8a, 0xe9, 0x70, 0x9a, 0x94, 0x53, 0x4c,
	0xe3, 0x87, 0x9c, 0x5a, 0x3f, 0x0c, 0x58, 0xae, 0x8b, 0x60, 0x37, 0xf1, 0xfe, 0xbf, 0xaf, 0x58,
	0xa6, 0xf1, 0x7c, 0xb6, 0x71, 0x6b, 0x5f, 0xfd, 0xff, 0x54, 0x33, 0x89, 0x98, 0x57, 0x8e, 0xbd,
	0x71, 0xcd, 0xd8, 0x6f, 0xfd, 0x9e, 0x84, 0x5c, 0x5d, 0x04, 0x84, 0x43, 0x5e, 0x7b, 0x72, 0x7b,
	0x9c, 0xbb, 0x6e, 0xe8, 0x22, 0x2e, 0x3d, 0xba, 0x5b, 0x52, 0x52, 0xe9, 0x67, 0x03, 0x60, 0xe0,
	0x06, 0xb2, 0x33, 0xe6, 0x26, 0x23, 0x96, 0x2f, 0x3d, 0xfd, 0x8b, 0xcc, 0xa4, 0x86, 0x33, 0x28,
	0xf4, 0x25, 0x24, 0x4f, 0xc6, 0xdc, 0x67, 0xd8, 0x41, 0xa5, 0x9d, 0xbb, 0x27, 0xea, 0xf3, 0x9f,
	0xbf, 0xfc, 0x7e, 0x51, 0x36, 0xce, 0x2f, 0xca, 0xc6, 0xaf, 0x8b, 0xb2, 0xf1, 0xe5, 0xb2, 0x3c,
	0x71, 0x7e, 0x59, 0x9e, 0xf8, 0x79, 0x59, 0x9e, 0x78, 0x6b, 0x07, 0x54, 0xb6, 0x3a, 0x4d, 0xdb,
	0x63, 0xef, 0x9d, 0x26, 0xae, 0xeb, 0xed, 0x9d, 0xfe, 0x63, 0xd9, 0x1d, 0x3c, 0x97, 0xea, 0x99,
	0x6c, 0x4e, 0xab, 0x77, 0x72, 0xfb, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0xd5, 0x9f, 0xa0,
	0x09, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Token(ctx context.Context, in *MsgTokenRequest, opts ...grpc.CallOption) (*MsgTokenResponse, error)
	DeviceCode(ctx context.Context, in *MsgDeviceCodeRequest, opts ...grpc.CallOption) (*MsgDeviceCodeResponse, error)
	Authorize(ctx context.Context, in *MsgAuthorizeRequest, opts ...grpc.CallOption) (*MsgAuthorizeResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Token(ctx context.Context, in *MsgTokenRequest, opts ...grpc.CallOption) (*MsgTokenResponse, error) {
	out := new(MsgTokenResponse)
	err := c.cc.Invoke(ctx, "/beheroes.doxchain.oauthtwo.v1beta1.Msg/Token", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeviceCode(ctx context.Context, in *MsgDeviceCodeRequest, opts ...grpc.CallOption) (*MsgDeviceCodeResponse, error) {
	out := new(MsgDeviceCodeResponse)
	err := c.cc.Invoke(ctx, "/beheroes.doxchain.oauthtwo.v1beta1.Msg/DeviceCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Authorize(ctx context.Context, in *MsgAuthorizeRequest, opts ...grpc.CallOption) (*MsgAuthorizeResponse, error) {
	out := new(MsgAuthorizeResponse)
	err := c.cc.Invoke(ctx, "/beheroes.doxchain.oauthtwo.v1beta1.Msg/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Token(context.Context, *MsgTokenRequest) (*MsgTokenResponse, error)
	DeviceCode(context.Context, *MsgDeviceCodeRequest) (*MsgDeviceCodeResponse, error)
	Authorize(context.Context, *MsgAuthorizeRequest) (*MsgAuthorizeResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Token(ctx context.Context, req *MsgTokenRequest) (*MsgTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Token not implemented")
}
func (*UnimplementedMsgServer) DeviceCode(ctx context.Context, req *MsgDeviceCodeRequest) (*MsgDeviceCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceCode not implemented")
}
func (*UnimplementedMsgServer) Authorize(ctx context.Context, req *MsgAuthorizeRequest) (*MsgAuthorizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beheroes.doxchain.oauthtwo.v1beta1.Msg/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Token(ctx, req.(*MsgTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeviceCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeviceCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeviceCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beheroes.doxchain.oauthtwo.v1beta1.Msg/DeviceCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeviceCode(ctx, req.(*MsgDeviceCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAuthorizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beheroes.doxchain.oauthtwo.v1beta1.Msg/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Authorize(ctx, req.(*MsgAuthorizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "beheroes.doxchain.oauthtwo.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Token",
			Handler:    _Msg_Token_Handler,
		},
		{
			MethodName: "DeviceCode",
			Handler:    _Msg_DeviceCode_Handler,
		},
		{
			MethodName: "Authorize",
			Handler:    _Msg_Authorize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "doxchain/oauthtwo/v1beta1/tx.proto",
}

func (m *MsgTokenRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTokenRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTokenRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestedTokenUse) > 0 {
		i -= len(m.RequestedTokenUse)
		copy(dAtA[i:], m.RequestedTokenUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequestedTokenUse)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.CodeChallengeMethod) > 0 {
		i -= len(m.CodeChallengeMethod)
		copy(dAtA[i:], m.CodeChallengeMethod)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CodeChallengeMethod)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.CodeChallenge) > 0 {
		i -= len(m.CodeChallenge)
		copy(dAtA[i:], m.CodeChallenge)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CodeChallenge)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.RedirectUri) > 0 {
		i -= len(m.RedirectUri)
		copy(dAtA[i:], m.RedirectUri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RedirectUri)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ResponseType) > 0 {
		i -= len(m.ResponseType)
		copy(dAtA[i:], m.ResponseType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ResponseType)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ClientAssertion) > 0 {
		i -= len(m.ClientAssertion)
		copy(dAtA[i:], m.ClientAssertion)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientAssertion)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ClientAssertionType) > 0 {
		i -= len(m.ClientAssertionType)
		copy(dAtA[i:], m.ClientAssertionType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientAssertionType)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.AuthorizationCode) > 0 {
		i -= len(m.AuthorizationCode)
		copy(dAtA[i:], m.AuthorizationCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthorizationCode)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DeviceCode) > 0 {
		i -= len(m.DeviceCode)
		copy(dAtA[i:], m.DeviceCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeviceCode)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ClientRegistrationAppIdW3CIdentifier) > 0 {
		i -= len(m.ClientRegistrationAppIdW3CIdentifier)
		copy(dAtA[i:], m.ClientRegistrationAppIdW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientRegistrationAppIdW3CIdentifier)))
		i--
		dAtA[i] = 0x2a
	}
	if m.GrantType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GrantType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Scope) > 0 {
		for iNdEx := len(m.Scope) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Scope[iNdEx])
			copy(dAtA[i:], m.Scope[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Scope[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.TenantW3CIdentifier) > 0 {
		i -= len(m.TenantW3CIdentifier)
		copy(dAtA[i:], m.TenantW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TenantW3CIdentifier)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExpiresIn != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ExpiresIn))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TokenType) > 0 {
		i -= len(m.TokenType)
		copy(dAtA[i:], m.TokenType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeviceCodeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeviceCodeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeviceCodeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Scope) > 0 {
		for iNdEx := len(m.Scope) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Scope[iNdEx])
			copy(dAtA[i:], m.Scope[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Scope[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ClientRegistrationAppIdW3CIdentifier) > 0 {
		i -= len(m.ClientRegistrationAppIdW3CIdentifier)
		copy(dAtA[i:], m.ClientRegistrationAppIdW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientRegistrationAppIdW3CIdentifier)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TenantW3CIdentifier) > 0 {
		i -= len(m.TenantW3CIdentifier)
		copy(dAtA[i:], m.TenantW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TenantW3CIdentifier)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeviceCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeviceCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeviceCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VerificationUri) > 0 {
		i -= len(m.VerificationUri)
		copy(dAtA[i:], m.VerificationUri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VerificationUri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserCode) > 0 {
		i -= len(m.UserCode)
		copy(dAtA[i:], m.UserCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UserCode)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DeviceCode) > 0 {
		i -= len(m.DeviceCode)
		copy(dAtA[i:], m.DeviceCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeviceCode)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAuthorizeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthorizeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthorizeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserCode) > 0 {
		i -= len(m.UserCode)
		copy(dAtA[i:], m.UserCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UserCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scope) > 0 {
		for iNdEx := len(m.Scope) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Scope[iNdEx])
			copy(dAtA[i:], m.Scope[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Scope[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ClientRegistrationAppIdW3CIdentifier) > 0 {
		i -= len(m.ClientRegistrationAppIdW3CIdentifier)
		copy(dAtA[i:], m.ClientRegistrationAppIdW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClientRegistrationAppIdW3CIdentifier)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TenantW3CIdentifier) > 0 {
		i -= len(m.TenantW3CIdentifier)
		copy(dAtA[i:], m.TenantW3CIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TenantW3CIdentifier)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAuthorizeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthorizeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthorizeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthorizationCode) > 0 {
		i -= len(m.AuthorizationCode)
		copy(dAtA[i:], m.AuthorizationCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuthorizationCode)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgTokenRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TenantW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Scope) > 0 {
		for _, s := range m.Scope {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.GrantType != 0 {
		n += 1 + sovTx(uint64(m.GrantType))
	}
	l = len(m.ClientRegistrationAppIdW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClientSecret)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DeviceCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuthorizationCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClientAssertionType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClientAssertion)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ResponseType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RedirectUri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CodeChallenge)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CodeChallengeMethod)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequestedTokenUse)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TokenType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ExpiresIn != 0 {
		n += 1 + sovTx(uint64(m.ExpiresIn))
	}
	return n
}

func (m *MsgDeviceCodeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TenantW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClientRegistrationAppIdW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Scope) > 0 {
		for _, s := range m.Scope {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDeviceCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeviceCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UserCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.VerificationUri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAuthorizeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TenantW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClientRegistrationAppIdW3CIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Scope) > 0 {
		for _, s := range m.Scope {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.UserCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAuthorizeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthorizationCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgTokenRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTokenRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTokenRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TenantW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = append(m.Scope, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantType", wireType)
			}
			m.GrantType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GrantType |= GrantType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientRegistrationAppIdW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientRegistrationAppIdW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorizationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientAssertionType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientAssertionType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientAssertion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientAssertion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResponseType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RedirectUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeChallenge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CodeChallenge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeChallengeMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CodeChallengeMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedTokenUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestedTokenUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresIn", wireType)
			}
			m.ExpiresIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresIn |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeviceCodeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeviceCodeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeviceCodeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TenantW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientRegistrationAppIdW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientRegistrationAppIdW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = append(m.Scope, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeviceCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeviceCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeviceCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerificationUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAuthorizeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthorizeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthorizeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TenantW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientRegistrationAppIdW3CIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientRegistrationAppIdW3CIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = append(m.Scope, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAuthorizeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthorizeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthorizeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorizationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
