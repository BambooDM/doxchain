// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: doxchain/abs/watchlist_entry.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WatchlistEntry struct {
	Address     string                                   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	BlockHeight uint64                                   `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty" yaml:"blockheight"`
	Coins       github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=coins,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"coins" yaml:"coins"`
}

func (m *WatchlistEntry) Reset()         { *m = WatchlistEntry{} }
func (m *WatchlistEntry) String() string { return proto.CompactTextString(m) }
func (*WatchlistEntry) ProtoMessage()    {}
func (*WatchlistEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e474fbcb569910f3, []int{0}
}
func (m *WatchlistEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchlistEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchlistEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchlistEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchlistEntry.Merge(m, src)
}
func (m *WatchlistEntry) XXX_Size() int {
	return m.Size()
}
func (m *WatchlistEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchlistEntry.DiscardUnknown(m)
}

var xxx_messageInfo_WatchlistEntry proto.InternalMessageInfo

func (m *WatchlistEntry) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WatchlistEntry) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *WatchlistEntry) GetCoins() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Coins
	}
	return nil
}

func init() {
	proto.RegisterType((*WatchlistEntry)(nil), "doxchain.abs.WatchlistEntry")
}

func init() {
	proto.RegisterFile("doxchain/abs/watchlist_entry.proto", fileDescriptor_e474fbcb569910f3)
}

var fileDescriptor_e474fbcb569910f3 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xb1, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0xe3, 0xdb, 0x0b, 0x88, 0xb4, 0xea, 0x10, 0x21, 0x54, 0x3a, 0x38, 0x55, 0xa6, 0x20,
	0x51, 0x5b, 0x85, 0x05, 0x31, 0xa1, 0x54, 0x48, 0xcc, 0x5d, 0x90, 0x58, 0x90, 0x9d, 0x58, 0x89,
	0xd5, 0x36, 0x2e, 0x39, 0x06, 0xda, 0xb7, 0xe0, 0x39, 0x78, 0x92, 0x8e, 0x1d, 0x99, 0x02, 0x6a,
	0x47, 0xb6, 0x3e, 0x01, 0x8a, 0xdd, 0xa0, 0x4e, 0x89, 0xf4, 0xfd, 0xe7, 0xf3, 0x6f, 0x1f, 0x37,
	0x48, 0xd4, 0x3c, 0xce, 0x98, 0xcc, 0x29, 0xe3, 0x40, 0xdf, 0x98, 0x8e, 0xb3, 0x89, 0x04, 0xfd,
	0x24, 0x72, 0x5d, 0x2c, 0xc8, 0xac, 0x50, 0x5a, 0x79, 0xad, 0x3a, 0x43, 0x18, 0x87, 0xee, 0x49,
	0xaa, 0x52, 0x65, 0x00, 0xad, 0xfe, 0x6c, 0xa6, 0x8b, 0x63, 0x05, 0x53, 0x05, 0x94, 0x33, 0x10,
	0xf4, 0x75, 0xc0, 0x85, 0x66, 0x03, 0x1a, 0x2b, 0x99, 0x5b, 0x1e, 0xfc, 0x20, 0xb7, 0xfd, 0x50,
	0xdb, 0xef, 0x2a, 0xb9, 0x77, 0xe1, 0x1e, 0xb1, 0x24, 0x29, 0x04, 0x40, 0x07, 0xf5, 0x50, 0x78,
	0x1c, 0x79, 0xdb, 0xd2, 0x6f, 0x2f, 0xd8, 0x74, 0x72, 0x13, 0xec, 0x40, 0x30, 0xaa, 0x23, 0xde,
	0xb5, 0xdb, 0xe4, 0x13, 0x15, 0x8f, 0xef, 0x85, 0x4c, 0x33, 0xdd, 0xf9, 0xd7, 0x43, 0xe1, 0xff,
	0xe8, 0x74, 0x5b, 0xfa, 0x9e, 0x9d, 0x30, 0x30, 0x33, 0x30, 0x18, 0xed, 0x47, 0xbd, 0x67, 0xf7,
	0xa0, 0x2a, 0x02, 0x9d, 0x46, 0xaf, 0x11, 0x36, 0x2f, 0xcf, 0x88, 0xad, 0x4a, 0xaa, 0xaa, 0x64,
	0x57, 0x95, 0x0c, 0x95, 0xcc, 0xa3, 0xdb, 0x65, 0xe9, 0x3b, 0xdb, 0xd2, 0x6f, 0x59, 0xa5, 0x99,
	0x0a, 0x3e, 0xbe, 0xfc, 0x30, 0x95, 0x3a, 0x7b, 0xe1, 0x24, 0x56, 0x53, 0xba, 0xbb, 0xa7, 0xfd,
	0xf4, 0x21, 0x19, 0x53, 0xbd, 0x98, 0x09, 0x30, 0x02, 0x18, 0xd9, 0x93, 0xa2, 0xe1, 0x72, 0x8d,
	0xd1, 0x6a, 0x8d, 0xd1, 0xf7, 0x1a, 0xa3, 0xf7, 0x0d, 0x76, 0x56, 0x1b, 0xec, 0x7c, 0x6e, 0xb0,
	0xf3, 0x78, 0xbe, 0xa7, 0xe2, 0xa2, 0x9f, 0x89, 0x42, 0x09, 0xa0, 0x7f, 0x4b, 0x98, 0x9b, 0x35,
	0x18, 0x23, 0x3f, 0x34, 0x2f, 0x77, 0xf5, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x81, 0x7c, 0x3a, 0xd0,
	0xa3, 0x01, 0x00, 0x00,
}

func (m *WatchlistEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchlistEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchlistEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Coins) > 0 {
		for iNdEx := len(m.Coins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Coins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintWatchlistEntry(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BlockHeight != 0 {
		i = encodeVarintWatchlistEntry(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintWatchlistEntry(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintWatchlistEntry(dAtA []byte, offset int, v uint64) int {
	offset -= sovWatchlistEntry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WatchlistEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovWatchlistEntry(uint64(l))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovWatchlistEntry(uint64(m.BlockHeight))
	}
	if len(m.Coins) > 0 {
		for _, e := range m.Coins {
			l = e.Size()
			n += 1 + l + sovWatchlistEntry(uint64(l))
		}
	}
	return n
}

func sovWatchlistEntry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWatchlistEntry(x uint64) (n int) {
	return sovWatchlistEntry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WatchlistEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWatchlistEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchlistEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchlistEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWatchlistEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWatchlistEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWatchlistEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWatchlistEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWatchlistEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWatchlistEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWatchlistEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coins = append(m.Coins, types.Coin{})
			if err := m.Coins[len(m.Coins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWatchlistEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWatchlistEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWatchlistEntry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWatchlistEntry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWatchlistEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWatchlistEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWatchlistEntry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWatchlistEntry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWatchlistEntry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWatchlistEntry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWatchlistEntry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWatchlistEntry = fmt.Errorf("proto: unexpected end of group")
)
