// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: doxchain/idp/v1beta1/client_registration_relationship_registry_entry.proto

package types

import (
	fmt "fmt"
	types "github.com/be-heroes/doxchain/x/did/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClientRegistrationRelationshipRegistryEntry struct {
	Owner            types.Did        `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner"`
	Destination      types.Did        `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination"`
	AccessClientList AccessClientList `protobuf:"bytes,3,opt,name=accessClientList,proto3" json:"accessClientList"`
}

func (m *ClientRegistrationRelationshipRegistryEntry) Reset() {
	*m = ClientRegistrationRelationshipRegistryEntry{}
}
func (m *ClientRegistrationRelationshipRegistryEntry) String() string {
	return proto.CompactTextString(m)
}
func (*ClientRegistrationRelationshipRegistryEntry) ProtoMessage() {}
func (*ClientRegistrationRelationshipRegistryEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f6a09daefd6f447, []int{0}
}
func (m *ClientRegistrationRelationshipRegistryEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClientRegistrationRelationshipRegistryEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClientRegistrationRelationshipRegistryEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClientRegistrationRelationshipRegistryEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRegistrationRelationshipRegistryEntry.Merge(m, src)
}
func (m *ClientRegistrationRelationshipRegistryEntry) XXX_Size() int {
	return m.Size()
}
func (m *ClientRegistrationRelationshipRegistryEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRegistrationRelationshipRegistryEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRegistrationRelationshipRegistryEntry proto.InternalMessageInfo

func (m *ClientRegistrationRelationshipRegistryEntry) GetOwner() types.Did {
	if m != nil {
		return m.Owner
	}
	return types.Did{}
}

func (m *ClientRegistrationRelationshipRegistryEntry) GetDestination() types.Did {
	if m != nil {
		return m.Destination
	}
	return types.Did{}
}

func (m *ClientRegistrationRelationshipRegistryEntry) GetAccessClientList() AccessClientList {
	if m != nil {
		return m.AccessClientList
	}
	return AccessClientList{}
}

func init() {
	proto.RegisterType((*ClientRegistrationRelationshipRegistryEntry)(nil), "doxchain.idp.v1beta1.ClientRegistrationRelationshipRegistryEntry")
}

func init() {
	proto.RegisterFile("doxchain/idp/v1beta1/client_registration_relationship_registry_entry.proto", fileDescriptor_7f6a09daefd6f447)
}

var fileDescriptor_7f6a09daefd6f447 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x93, 0xfe, 0x3f, 0x0c, 0xe9, 0x82, 0xa2, 0x0e, 0xa5, 0x83, 0x41, 0x0c, 0x08, 0x84,
	0x6a, 0xab, 0x20, 0x1e, 0xa0, 0x2d, 0x2c, 0x88, 0xa9, 0x13, 0x62, 0x89, 0x92, 0xf8, 0x2a, 0xb9,
	0x52, 0xb1, 0x23, 0xdb, 0x40, 0x33, 0xf2, 0x06, 0x3c, 0x56, 0xc7, 0x8e, 0x4c, 0x08, 0xb5, 0x2f,
	0x82, 0xe2, 0xb8, 0x51, 0x04, 0x1d, 0xd8, 0xac, 0x7b, 0xcf, 0x3d, 0xe7, 0xf3, 0x09, 0xee, 0xb8,
	0x5c, 0xa4, 0x79, 0x8c, 0x82, 0x21, 0x2f, 0xd8, 0xcb, 0x28, 0x01, 0x13, 0x8f, 0x58, 0x3a, 0x47,
	0x10, 0x26, 0x52, 0x90, 0xa1, 0x36, 0x2a, 0x36, 0x28, 0x45, 0xa4, 0x60, 0x6e, 0x1f, 0x3a, 0xc7,
	0x62, 0xbb, 0x29, 0x23, 0x10, 0x46, 0x95, 0xb4, 0x50, 0xd2, 0xc8, 0xb0, 0xb7, 0xf5, 0xa2, 0xc8,
	0x0b, 0xea, 0xbc, 0x06, 0xbd, 0x4c, 0x66, 0xd2, 0x0a, 0x58, 0xf5, 0xaa, 0xb5, 0x03, 0xd2, 0xe4,
	0x72, 0xe4, 0x4d, 0x2e, 0x47, 0xee, 0xf6, 0xc3, 0x9d, 0x5c, 0x71, 0x9a, 0x82, 0xd6, 0x91, 0xc3,
	0x9b, 0xa3, 0x36, 0xb5, 0xfc, 0xe4, 0xad, 0x13, 0x5c, 0x4c, 0xed, 0x74, 0xd6, 0x62, 0x9e, 0xb5,
	0x90, 0xdd, 0xbc, 0xbc, 0xad, 0x80, 0xc3, 0xeb, 0x60, 0x4f, 0xbe, 0x0a, 0x50, 0x7d, 0xff, 0xd8,
	0x3f, 0xeb, 0x5e, 0x1e, 0xd2, 0x06, 0xbd, 0x42, 0x70, 0x71, 0xf4, 0x06, 0xf9, 0xe4, 0xff, 0xf2,
	0xf3, 0xc8, 0x9b, 0xd5, 0xea, 0x70, 0x1c, 0x74, 0x39, 0x68, 0x83, 0xc2, 0xda, 0xf6, 0x3b, 0x7f,
	0x3b, 0x6e, 0xdf, 0x84, 0x0f, 0xc1, 0x41, 0xfd, 0x8b, 0x1a, 0xf7, 0x1e, 0xb5, 0xe9, 0xff, 0xb3,
	0x3e, 0xa7, 0x74, 0x57, 0x7f, 0x74, 0xfc, 0x43, 0xed, 0x4c, 0x7f, 0xb9, 0x4c, 0xa6, 0xcb, 0x35,
	0xf1, 0x57, 0x6b, 0xe2, 0x7f, 0xad, 0x89, 0xff, 0xbe, 0x21, 0xde, 0x6a, 0x43, 0xbc, 0x8f, 0x0d,
	0xf1, 0x1e, 0xcf, 0x33, 0x34, 0xf9, 0x73, 0x42, 0x53, 0xf9, 0xc4, 0x12, 0x18, 0xe6, 0xa0, 0x24,
	0x68, 0xd6, 0x34, 0xbc, 0xb0, 0x1d, 0x9b, 0xb2, 0x00, 0x9d, 0xec, 0xdb, 0x3e, 0xaf, 0xbe, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xa4, 0x73, 0x66, 0xc4, 0x18, 0x02, 0x00, 0x00,
}

func (m *ClientRegistrationRelationshipRegistryEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClientRegistrationRelationshipRegistryEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClientRegistrationRelationshipRegistryEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.AccessClientList.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationshipRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Destination.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationshipRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationshipRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintClientRegistrationRelationshipRegistryEntry(dAtA []byte, offset int, v uint64) int {
	offset -= sovClientRegistrationRelationshipRegistryEntry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClientRegistrationRelationshipRegistryEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Owner.Size()
	n += 1 + l + sovClientRegistrationRelationshipRegistryEntry(uint64(l))
	l = m.Destination.Size()
	n += 1 + l + sovClientRegistrationRelationshipRegistryEntry(uint64(l))
	l = m.AccessClientList.Size()
	n += 1 + l + sovClientRegistrationRelationshipRegistryEntry(uint64(l))
	return n
}

func sovClientRegistrationRelationshipRegistryEntry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClientRegistrationRelationshipRegistryEntry(x uint64) (n int) {
	return sovClientRegistrationRelationshipRegistryEntry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClientRegistrationRelationshipRegistryEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClientRegistrationRelationshipRegistryEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClientRegistrationRelationshipRegistryEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClientRegistrationRelationshipRegistryEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationshipRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationshipRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Destination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessClientList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationshipRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AccessClientList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClientRegistrationRelationshipRegistryEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClientRegistrationRelationshipRegistryEntry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClientRegistrationRelationshipRegistryEntry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientRegistrationRelationshipRegistryEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientRegistrationRelationshipRegistryEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClientRegistrationRelationshipRegistryEntry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClientRegistrationRelationshipRegistryEntry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClientRegistrationRelationshipRegistryEntry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClientRegistrationRelationshipRegistryEntry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClientRegistrationRelationshipRegistryEntry = fmt.Errorf("proto: unexpected end of group")
)
