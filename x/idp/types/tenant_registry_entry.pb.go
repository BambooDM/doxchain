// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: doxchain/idp/v1beta1/tenant_registry_entry.proto

package types

import (
	fmt "fmt"
	types "github.com/be-heroes/doxchain/x/did/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TenantRegistryEntry struct {
	Id                  types.Did           `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	TenantConfiguration TenantConfiguration `protobuf:"bytes,2,opt,name=tenantConfiguration,proto3" json:"tenantConfiguration"`
	AccessClientList    AccessClientList    `protobuf:"bytes,3,opt,name=accessClientList,proto3" json:"accessClientList"`
}

func (m *TenantRegistryEntry) Reset()         { *m = TenantRegistryEntry{} }
func (m *TenantRegistryEntry) String() string { return proto.CompactTextString(m) }
func (*TenantRegistryEntry) ProtoMessage()    {}
func (*TenantRegistryEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f105e8145f7effdb, []int{0}
}
func (m *TenantRegistryEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TenantRegistryEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TenantRegistryEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TenantRegistryEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantRegistryEntry.Merge(m, src)
}
func (m *TenantRegistryEntry) XXX_Size() int {
	return m.Size()
}
func (m *TenantRegistryEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantRegistryEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TenantRegistryEntry proto.InternalMessageInfo

func (m *TenantRegistryEntry) GetId() types.Did {
	if m != nil {
		return m.Id
	}
	return types.Did{}
}

func (m *TenantRegistryEntry) GetTenantConfiguration() TenantConfiguration {
	if m != nil {
		return m.TenantConfiguration
	}
	return TenantConfiguration{}
}

func (m *TenantRegistryEntry) GetAccessClientList() AccessClientList {
	if m != nil {
		return m.AccessClientList
	}
	return AccessClientList{}
}

func init() {
	proto.RegisterType((*TenantRegistryEntry)(nil), "beheroes.doxchain.idp.v1beta1.TenantRegistryEntry")
}

func init() {
	proto.RegisterFile("doxchain/idp/v1beta1/tenant_registry_entry.proto", fileDescriptor_f105e8145f7effdb)
}

var fileDescriptor_f105e8145f7effdb = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x31, 0x4f, 0x02, 0x31,
	0x14, 0xc7, 0xef, 0x4e, 0xe3, 0x70, 0x2e, 0xe6, 0x70, 0x20, 0x24, 0x56, 0xc3, 0xa4, 0x03, 0xad,
	0xe0, 0xe2, 0x2a, 0xe8, 0xe6, 0x44, 0x98, 0x5c, 0x2e, 0x77, 0x6d, 0x3d, 0x9e, 0xc1, 0xf6, 0xd2,
	0x3e, 0x0c, 0x7c, 0x0b, 0x3f, 0x81, 0x9f, 0x87, 0x91, 0xd1, 0xc9, 0x18, 0xf8, 0x22, 0x86, 0x5e,
	0x45, 0x23, 0x04, 0xb7, 0x26, 0x7d, 0xff, 0xff, 0xef, 0xfd, 0xff, 0x2f, 0xbe, 0x14, 0x7a, 0xc2,
	0x87, 0x19, 0x28, 0x06, 0xa2, 0x64, 0x2f, 0xed, 0x5c, 0x62, 0xd6, 0x66, 0x28, 0x55, 0xa6, 0x30,
	0x35, 0xb2, 0x00, 0x8b, 0x66, 0x9a, 0x4a, 0x85, 0x66, 0x4a, 0x4b, 0xa3, 0x51, 0x27, 0x27, 0xb9,
	0x1c, 0x4a, 0xa3, 0xa5, 0xa5, 0xdf, 0x52, 0x0a, 0xa2, 0xa4, 0x5e, 0xda, 0x38, 0x2e, 0x74, 0xa1,
	0xdd, 0x24, 0x5b, 0xbd, 0x2a, 0x51, 0x83, 0xac, 0x31, 0x02, 0xc4, 0x1a, 0x23, 0x40, 0xf8, 0xff,
	0xd6, 0xd6, 0x35, 0x32, 0xce, 0xa5, 0xb5, 0x29, 0x1f, 0x81, 0x54, 0x98, 0x8e, 0xc0, 0xa2, 0x1f,
	0x67, 0xbb, 0xb6, 0xe6, 0x5a, 0x3d, 0x42, 0x31, 0x36, 0x19, 0x82, 0x56, 0x95, 0xa0, 0xf9, 0x16,
	0xc5, 0xb5, 0x81, 0xfb, 0xee, 0xfb, 0x4c, 0x77, 0xab, 0x48, 0xc9, 0x75, 0x1c, 0x81, 0xa8, 0x87,
	0x67, 0xe1, 0xf9, 0x61, 0xa7, 0x49, 0x37, 0x93, 0xad, 0x36, 0xf4, 0xf6, 0xf4, 0x16, 0x44, 0x77,
	0x7f, 0xf6, 0x71, 0x1a, 0xf4, 0x23, 0x10, 0xc9, 0x53, 0x5c, 0xab, 0x78, 0xbd, 0xdf, 0xb8, 0x7a,
	0xe4, 0xac, 0x3a, 0x74, 0x67, 0x49, 0x74, 0xb0, 0xa9, 0xf4, 0xd6, 0xdb, 0x4c, 0x93, 0x2c, 0x3e,
	0xaa, 0xaa, 0xe8, 0xb9, 0x26, 0xee, 0xc1, 0x62, 0x7d, 0xcf, 0x81, 0xd8, 0x3f, 0xa0, 0x9b, 0x3f,
	0x32, 0x4f, 0xd9, 0xb0, 0xeb, 0xf6, 0x66, 0x0b, 0x12, 0xce, 0x17, 0x24, 0xfc, 0x5c, 0x90, 0xf0,
	0x75, 0x49, 0x82, 0xf9, 0x92, 0x04, 0xef, 0x4b, 0x12, 0x3c, 0x5c, 0x14, 0x80, 0xc3, 0x71, 0x4e,
	0xb9, 0x7e, 0x66, 0xb9, 0x6c, 0x55, 0xb4, 0x9f, 0x03, 0x4c, 0xdc, 0x09, 0x70, 0x5a, 0x4a, 0x9b,
	0x1f, 0xb8, 0xb2, 0xaf, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x92, 0xa8, 0xe2, 0x7d, 0x55, 0x02,
	0x00, 0x00,
}

func (m *TenantRegistryEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TenantRegistryEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TenantRegistryEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.AccessClientList.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTenantRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.TenantConfiguration.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTenantRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTenantRegistryEntry(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintTenantRegistryEntry(dAtA []byte, offset int, v uint64) int {
	offset -= sovTenantRegistryEntry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TenantRegistryEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Id.Size()
	n += 1 + l + sovTenantRegistryEntry(uint64(l))
	l = m.TenantConfiguration.Size()
	n += 1 + l + sovTenantRegistryEntry(uint64(l))
	l = m.AccessClientList.Size()
	n += 1 + l + sovTenantRegistryEntry(uint64(l))
	return n
}

func sovTenantRegistryEntry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTenantRegistryEntry(x uint64) (n int) {
	return sovTenantRegistryEntry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TenantRegistryEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTenantRegistryEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TenantRegistryEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TenantRegistryEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTenantRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantConfiguration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTenantRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TenantConfiguration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessClientList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTenantRegistryEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AccessClientList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTenantRegistryEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTenantRegistryEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTenantRegistryEntry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTenantRegistryEntry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTenantRegistryEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTenantRegistryEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTenantRegistryEntry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTenantRegistryEntry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTenantRegistryEntry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTenantRegistryEntry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTenantRegistryEntry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTenantRegistryEntry = fmt.Errorf("proto: unexpected end of group")
)
