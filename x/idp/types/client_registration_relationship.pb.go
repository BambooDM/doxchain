// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: doxchain/idp/v1beta1/client_registration_relationship.proto

package types

import (
	fmt "fmt"
	types "github.com/be-heroes/doxchain/x/did/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClientRegistrationRelationship struct {
	OwnerId          types.Did        `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId"`
	DestinationId    types.Did        `protobuf:"bytes,2,opt,name=destinationId,proto3" json:"destinationId"`
	AccessClientList AccessClientList `protobuf:"bytes,3,opt,name=accessClientList,proto3" json:"accessClientList"`
}

func (m *ClientRegistrationRelationship) Reset()         { *m = ClientRegistrationRelationship{} }
func (m *ClientRegistrationRelationship) String() string { return proto.CompactTextString(m) }
func (*ClientRegistrationRelationship) ProtoMessage()    {}
func (*ClientRegistrationRelationship) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b36ee8013930849, []int{0}
}
func (m *ClientRegistrationRelationship) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClientRegistrationRelationship) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClientRegistrationRelationship.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClientRegistrationRelationship) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRegistrationRelationship.Merge(m, src)
}
func (m *ClientRegistrationRelationship) XXX_Size() int {
	return m.Size()
}
func (m *ClientRegistrationRelationship) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRegistrationRelationship.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRegistrationRelationship proto.InternalMessageInfo

func (m *ClientRegistrationRelationship) GetOwnerId() types.Did {
	if m != nil {
		return m.OwnerId
	}
	return types.Did{}
}

func (m *ClientRegistrationRelationship) GetDestinationId() types.Did {
	if m != nil {
		return m.DestinationId
	}
	return types.Did{}
}

func (m *ClientRegistrationRelationship) GetAccessClientList() AccessClientList {
	if m != nil {
		return m.AccessClientList
	}
	return AccessClientList{}
}

func init() {
	proto.RegisterType((*ClientRegistrationRelationship)(nil), "beheroes.doxchain.idp.v1beta1.ClientRegistrationRelationship")
}

func init() {
	proto.RegisterFile("doxchain/idp/v1beta1/client_registration_relationship.proto", fileDescriptor_3b36ee8013930849)
}

var fileDescriptor_3b36ee8013930849 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x31, 0x4b, 0xfb, 0x40,
	0x18, 0xc6, 0x93, 0xfe, 0xff, 0x28, 0x44, 0x04, 0x09, 0x0e, 0xa5, 0xe0, 0x29, 0x9d, 0x74, 0xe8,
	0x1d, 0xd5, 0xd1, 0xc9, 0xd6, 0xa5, 0x20, 0x0e, 0x19, 0x5d, 0x42, 0x92, 0xf7, 0x25, 0x79, 0x21,
	0xe6, 0xc2, 0xdd, 0xa9, 0xf5, 0x5b, 0xb8, 0xf9, 0x95, 0x3a, 0x76, 0x74, 0x12, 0x49, 0xbe, 0x88,
	0xf4, 0x92, 0x86, 0x6a, 0x45, 0x70, 0x3b, 0x92, 0x7b, 0x7e, 0xcf, 0xef, 0x1e, 0xef, 0x12, 0xe4,
	0x3c, 0xc9, 0x22, 0x2a, 0x04, 0x41, 0x29, 0x1e, 0xc7, 0x31, 0x9a, 0x68, 0x2c, 0x92, 0x9c, 0xb0,
	0x30, 0xa1, 0xc2, 0x94, 0xb4, 0x51, 0x91, 0x21, 0x59, 0x84, 0x0a, 0x73, 0x7b, 0xd0, 0x19, 0x95,
	0xbc, 0x54, 0xd2, 0x48, 0xff, 0x28, 0xc6, 0x0c, 0x95, 0x44, 0xcd, 0xd7, 0x14, 0x4e, 0x50, 0xf2,
	0x96, 0x32, 0x38, 0x4c, 0x65, 0x2a, 0xed, 0x4d, 0xb1, 0x3a, 0x35, 0xa1, 0x01, 0xeb, 0x1a, 0x81,
	0xa0, 0x6b, 0x04, 0x82, 0xf6, 0xff, 0xe8, 0x47, 0xa3, 0x28, 0x49, 0x50, 0xeb, 0xb0, 0x15, 0xcb,
	0x49, 0x9b, 0xe6, 0xfa, 0xf0, 0xb5, 0xe7, 0xb1, 0xa9, 0xfd, 0x1a, 0x6c, 0xd8, 0x06, 0x1b, 0xb2,
	0xfe, 0xc4, 0xdb, 0x95, 0x4f, 0x05, 0xaa, 0x19, 0xf4, 0xdd, 0x13, 0xf7, 0x74, 0xef, 0x7c, 0xc8,
	0xb7, 0xc5, 0x57, 0x02, 0x6d, 0x19, 0xbf, 0x26, 0x98, 0xfc, 0x5f, 0xbc, 0x1f, 0x3b, 0xc1, 0x3a,
	0xe8, 0xdf, 0x7a, 0xfb, 0x80, 0xda, 0x50, 0x61, 0xb1, 0x33, 0xe8, 0xf7, 0xfe, 0x48, 0xfa, 0x1a,
	0xf7, 0x23, 0xef, 0xa0, 0x79, 0x52, 0xe3, 0x7e, 0x43, 0xda, 0xf4, 0xff, 0x59, 0xa4, 0xe0, 0xbf,
	0xae, 0xca, 0xaf, 0xbe, 0xc5, 0x5a, 0xfe, 0x16, 0x6e, 0x32, 0x5d, 0x54, 0xcc, 0x5d, 0x56, 0xcc,
	0xfd, 0xa8, 0x98, 0xfb, 0x52, 0x33, 0x67, 0x59, 0x33, 0xe7, 0xad, 0x66, 0xce, 0xdd, 0x59, 0x4a,
	0x26, 0x7b, 0x88, 0x79, 0x22, 0xef, 0x45, 0x8c, 0xa3, 0xa6, 0x4d, 0x74, 0xbb, 0xcf, 0xed, 0xf2,
	0xe6, 0xb9, 0x44, 0x1d, 0xef, 0xd8, 0x95, 0x2f, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xb0,
	0xf6, 0x2c, 0x28, 0x02, 0x00, 0x00,
}

func (m *ClientRegistrationRelationship) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClientRegistrationRelationship) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClientRegistrationRelationship) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.AccessClientList.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationship(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.DestinationId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationship(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.OwnerId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientRegistrationRelationship(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintClientRegistrationRelationship(dAtA []byte, offset int, v uint64) int {
	offset -= sovClientRegistrationRelationship(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClientRegistrationRelationship) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OwnerId.Size()
	n += 1 + l + sovClientRegistrationRelationship(uint64(l))
	l = m.DestinationId.Size()
	n += 1 + l + sovClientRegistrationRelationship(uint64(l))
	l = m.AccessClientList.Size()
	n += 1 + l + sovClientRegistrationRelationship(uint64(l))
	return n
}

func sovClientRegistrationRelationship(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClientRegistrationRelationship(x uint64) (n int) {
	return sovClientRegistrationRelationship(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClientRegistrationRelationship) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClientRegistrationRelationship
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClientRegistrationRelationship: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClientRegistrationRelationship: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationship
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OwnerId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationship
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DestinationId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessClientList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientRegistrationRelationship
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AccessClientList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClientRegistrationRelationship(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClientRegistrationRelationship
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClientRegistrationRelationship(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClientRegistrationRelationship
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientRegistrationRelationship
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientRegistrationRelationship
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClientRegistrationRelationship
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClientRegistrationRelationship
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClientRegistrationRelationship
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClientRegistrationRelationship        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClientRegistrationRelationship          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClientRegistrationRelationship = fmt.Errorf("proto: unexpected end of group")
)
